services:
  db:
    image: postgres:17
    restart: always
    environment:
      POSTGRES_DB: wycieczkomat
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - backend
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    networks:
      - backend
    environment:
      - POSTGRES_DB=wycieczkomat
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
    depends_on:
      db:
        condition: service_healthy  # <-- czekaj, aż db będzie "healthy"

volumes:
  postgres_data:

networks:
  backend:
    driver: bridge
